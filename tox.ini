[tox]
package = rstcheck

minversion = 3.15.0
requires =
    tox-envlist
skip_missing_interpreters = true
ignore_basepython_conflict = true
isolated_build = true
skipsdist = false

envlist =
    package
    pre-commit
    py{310,39,38,37}
    py{310,39,38,37}-with-sphinx


[envlists]
test = py{310,39,38,37},py{310,39,38,37}-with-sphinx
qa = package,pre-commit


[testenv]
description = basic config env
passenv =
    HOME
    CI
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
download = true


[testenv:pre-commit]
description = format and check the code
passenv =
    {[testenv]passenv}
    SSH_AUTH_SOCK
    SKIP
setenv =
    {[testenv]setenv}
    SKIP = {tty:identity:},{env:SKIP:}
skip_install = true
deps = pre-commit >= 2.17
commands = pre-commit run {posargs} --all-files {tty::--show-diff-on-failure} {tty:--color always:}


[testenv:mypy]
description = run mypy type checker
deps = mypy >=0.931
ignore_errors = true
commands =
    mypy rstcheck.py
    mypy test_rstcheck.py


[testenv:pylint]
description = run pylint linter
deps = pylint >= 2.12
commands = pylint rstcheck.py test_rstcheck.py


[testenv:package]
description = check sdist and wheel
skip_install = true
deps =
    poetry >= 1.1.13
    twine >= 3.3
commands =
    poetry build {tty:--ansi:} --no-interaction -vvv
    twine check --strict dist/*


[testenv:py{310,39,38,37}]
description = run tests with {basepython}
commands = python -m test_rstcheck


[testenv:py{310,39,38,37}-with-sphinx]
description = run tests with {basepython}
extras = sphinx
commands = python -m test_rstcheck
